/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <13 16>;
        };

        capsw {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        i3w_layer {
            bindings = <&mo 4>;
            key-positions = <36 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp X        &kp W           &kp M           &kp G             &kp J            &kp HASH   &kp U              &kp O           &kp Y            &kp F        &none
&none  &mt LCTRL S  &mt LEFT_ALT C  &mt LEFT_GUI N  &mt LEFT_SHIFT T  &kp K            &kp DQT    &mt RIGHT_SHIFT A  &mt LEFT_GUI E  &mt RIGHT_ALT I  &mt RCTRL H  &none
&none  &kp B        &kp P           &kp L           &kp D             &kp V            &kp MINUS  &kp SQT            &kp COMMA       &kp DOT          &kp SLASH    &none
                                    &mo 1           &kp R             &kp BACKSPACE    &kp RET    &kp SPACE          &mo 2
            >;
        };

        fnk {
            bindings = <
&trans  &trans          &kp HOME      &kp UP        &kp END       &kp LC(F5)        &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &kp LCTRL       &kp LEFT      &kp DOWN      &kp RIGHT     &bt BT_CLR_ALL    &kp SLASH     &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &kp LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR        &kp PERIOD    &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                                      &trans        &trans        &trans            &trans        &kp N0  &trans
            >;
        };

        opt {
            bindings = <
&trans  &kp Q     &kp Z     &trans    &trans    &trans           &kp DLLR   &kp TILDE  &kp AT    &kp PRCNT  &kp HASH       &trans
&trans  &kp LBRC  &kp LPAR  &kp RPAR  &kp RBRC  &none            &kp CARET  &kp QMARK  &kp EXCL  &kp AMPS   &kp PIPE       &trans
&trans  &kp LBKT  &kp LT    &kp GT    &kp RBKT  &kp LS(TILDE)    &kp UNDER  &kp GRAVE  &kp SEMI  &kp COLON  &kp BACKSLASH  &trans
                            &trans    &trans    &trans           &trans     &trans     &mo 3
            >;
        };

        f12 {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                             &trans    &trans     &trans    &trans  &trans  &trans
            >;
        };

        i3w {
            bindings = <
&trans  &kp LG(Q)  &trans        &kp LG(UP)    &trans         &trans    &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &trans     &trans
&trans  &kp LSHFT  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(RIGHT)  &trans    &trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &kp RSHFT  &trans
&trans  &kp LCTRL  &trans        &kp LG(S)     &trans         &trans    &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp RCTRL  &trans
                                 &trans        &trans         &trans    &trans  &kp LG(N0)  &trans
            >;
        };
    };
};
