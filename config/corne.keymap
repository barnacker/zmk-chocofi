/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <13 16>;
        };

        capsw {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp X        &kp W           &kp M           &kp G             &kp J            &kp HASH   &kp PERIOD         &kp SQT          &kp DQT          &kp SLASH    &none
&none  &mt LCTRL S  &mt LEFT_ALT C  &mt LEFT_GUI N  &mt LEFT_SHIFT T  &kp K            &kp COMMA  &mt RIGHT_SHIFT A  &mt RIGHT_GUI E  &mt RIGHT_ALT I  &mt RCTRL H  &none
&none  &kp B        &kp P           &kp L           &kp D             &kp V            &kp MINUS  &kp U              &kp O            &kp Y            &kp F        &none
                                    &mo 1           &kp R             &kp BACKSPACE    &kp RET    &kp SPACE          &mo 2
            >;
        };

        fnk {
            bindings = <
&trans  &trans          &kp HOME  &kp UP    &kp END    &kp LC(F5)    &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &kp LCTRL       &kp LEFT  &kp DOWN  &kp RIGHT  &trans        &kp SLASH     &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &kp LEFT_SHIFT  &trans    &trans    &trans     &trans        &kp PERIOD    &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                                  &trans    &trans     &trans        &trans        &kp N0  &trans
            >;
        };

        opt {
            bindings = <
&trans  &kp Z       &kp Q     &trans        &trans        &trans           &kp LS(DLLR)   &kp LS(COLON)  &kp GRAVE     &kp LS(CARET)  &kp BSLH      &trans
&trans  &kp LS(LT)  &kp LBKT  &kp LS(LPAR)  &kp LS(LBRC)  &none            &kp SEMI       &kp LS(QMARK)  &kp LS(EXCL)  &kp LS(AMPS)   &kp LS(PIPE)  &trans
&trans  &kp LS(GT)  &kp RBKT  &kp LS(RPAR)  &kp LS(RBRC)  &kp LS(TILDE)    &kp LS(UNDER)  &kp LS(TILDE)  &kp LS(AT)    &kp LS(PRCNT)  &trans        &trans
                              &trans        &trans        &trans           &trans         &trans         &trans
            >;
        };
    };
};
